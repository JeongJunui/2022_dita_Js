자료형 종류
-문자열, 숫자형, 논리형, undefined, null, 객체

변수 선언법
-var
-let
-const

함수 선언법
-함수 선언문
--통상적인 함수처럼 선언
-함수 표현식
--const 변수명=function 식별자() 식으로 선언, 식별자가 있으면 네이밍 함수, 없으면 익명 함수(둘 다 변수명으로 호출)
-화살표 함수
--const 변수명=()=> 식으로 선언, 익명 함수로만 정의할 수 있음

JSON?
-JavaScript Object Notation의 축약어, 데이터 저장 및 전송에 많이 사용되는 경량의 데이터 교환 형식, 자바스크립트에서 객체를 만들 때 사용하는 표현식을 의미, 서버와 클라이언트 간의 교류에서 일반적으로 많이 사용됨

자바스크립트 스코프?
-함수의 지역/전역 범위에 대한 의미

var, let, const, 스코프의 차이
-var와 let은 재할당이 가능, 중복 선언은 var만 가능하며 const는 둘 다 불가능함

1급 객체?
-다른 객체들에 일반적으로 적용 가능한 연산을 모두 지원하는 객체

부동소수점?
-몇몇 소수가 10진법에서 2진법으로 변환되는 과정에서 미세한 값의 변동으로 인해 오차가 발생하는 것, 결과값 옆에 .toFixed(반올림할 소숫점 자릿수)를 사용하는 것으로 해결함

얕은 복사와 깊은 복사
-얕은 복사는 주소 값만 복사하는 것, 깊은 복사는 주소 안에 있는 실제 값을 새 메모리 주소에다가 복사하는 것

콜백?
-파라미터로 함수를 전달하는 함수

호이스팅?
-변수나 함수 선언을 함수 유효 범위의 맨 위로 이동하는 매커니즘

window 객체, DOM, BOM?
-window: 자바스크립트의 최상위 객체
-DOM: 문서 객체 모델, 구조화된 문서를 표현하는 방식, 브라우저가 웹 문서를 이해할 수 있도록 구성된 것
-BOM: 브라우저 객체 모델, 자바스크립트가 브라우저와 소통하기 위해 만들어짐, 공식 표준은 아니지만 브라우저 대부분이 자바스크립트와 상호작용함에 있어 비슷한 메소드와 속성으로 동작함